
$columns: 4;
$gutterwidth: 20;
$segmentwidth: 280;

// max outer and main widths
$grid-main-width: lemonGridMainWidth($columns, $segmentwidth, $gutterwidth);
$grid-outer-width: lemonGridOuterWidth($columns, $segmentwidth, $gutterwidth, true, true);

$minwidth: 1024 - $gutterwidth;

$headerheight: 135px;

.grid-outer {
	position: relative;
	overflow: hidden;
	margin: 0 auto;
	> div {
		padding: 0 $gutterwidth + px;
	}

	//width: $grid-outer-width + px;
	min-width: $minwidth - $gutterwidth * 2 + px;
	//max-width: $grid-outer-width - $gutterwidth * 2 + px;
	max-width: $grid-outer-width + px;

	width: 100%;

	/*
	> .grid {
		//max-width: $maxwidth + px;
		width: 100%;
		min-width: $minwidth + px;
		max-width: $grid-outer-width + px;
		margin: 0 auto;
	}
	*/

}
.grid {

	//@include LemonGridGen($columns, $segmentwidth, $gutterwidth);
	
	/*
	#content .grid,
	.grid {
		// Nested grids have no edge gutter
		@include lemonGrid($columns, $segmentwidth, $gutterwidth, false, false);
	}
	*/
}


html, body, #wrapper {
	position: relative;

	margin: 0; 
	padding: 0;
	//min-width: $grid-outer-width + px;
	min-width: $minwidth + px;
	min-height: 100%;
	width: 100%;
	height: auto;
	overflow: hidden;
}
html {
	overflow: auto;
	height: 100%;
}
#wrapper {
	> div {
		//padding-bottom: $footerheight;

		> .grid {
			//margin-top: $headerheight;
		}
	}
}
#header,
#header .grid-outer {
	height: $headerheight;
}

.content {
	position: relative;
	z-index: 0;
	clear: both;
	padding: 0 0 25px;
}

.clear.gutter {
	height: $gutterwidth + px;
}

#footer {
	padding: 25px 0;
	margin: 25px 0 0 0;
	/*
	position: absolute;
	bottom: 0;
	width: $grid-outer-width  + px;
	> div {
		height: $footerheight - 20px;
	}
	*/
}
